# Define the port the Identity Service will run on.
server.port=0

# Define a name for our application.
spring.application.name=identity-service

# -------------------- DATASOURCE CONFIGURATION --------------------
# This is the standard JDBC URL for a PostgreSQL database.
# 'localhost:5432' points to the port we exposed in our docker-compose.yml.
# 'payments_db' is the database name we defined.
spring.datasource.url=jdbc:postgresql://localhost:5432/payments_db

# The username and password must match what we set in docker-compose.yml.
spring.datasource.username=admin
spring.datasource.password=password

# -------------------- JPA/HIBERNATE CONFIGURATION --------------------
# Disabling 'Open Session in View' is a best practice to avoid potential
# performance issues and encourage explicit transaction management.
spring.jpa.open-in-view=false

# This is a very useful setting for development. It prints the actual SQL queries
# that Hibernate runs against the database to the console.
spring.jpa.show-sql=true

# This tells Hibernate to automatically create or update the database schema
# based on our @Entity classes. 'update' is safe for development.
spring.jpa.hibernate.ddl-auto=update

# -------------------- EUREKA CLIENT CONFIGURATION --------------------
# Tell this service where to find the Eureka server to register itself
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

